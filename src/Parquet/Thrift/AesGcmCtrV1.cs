/*
 * Autogenerated by Thrift Compiler (0.15.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System.Text;
using System.Threading;
using Thrift.Collections;

using Thrift.Protocol;
using Thrift.Protocol.Entities;
using Thrift.Protocol.Utilities;

#pragma warning disable CS1591   // Missing XML comment for publicly visible type or member
#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace Parquet.Thrift
{

   partial class AesGcmCtrV1 : TBase
   {
      private byte[] _aad_prefix;
      private byte[] _aad_file_unique;
      private bool _supply_aad_prefix;

      /// <summary>
      /// AAD prefix *
      /// </summary>
      public byte[] Aad_prefix
      {
         get
         {
            return _aad_prefix;
         }
         set
         {
            __isset.aad_prefix = true;
            this._aad_prefix = value;
         }
      }

      /// <summary>
      /// Unique file identifier part of AAD suffix *
      /// </summary>
      public byte[] Aad_file_unique
      {
         get
         {
            return _aad_file_unique;
         }
         set
         {
            __isset.aad_file_unique = true;
            this._aad_file_unique = value;
         }
      }

      /// <summary>
      /// In files encrypted with AAD prefix without storing it,
      /// readers must supply the prefix *
      /// </summary>
      public bool Supply_aad_prefix
      {
         get
         {
            return _supply_aad_prefix;
         }
         set
         {
            __isset.supply_aad_prefix = true;
            this._supply_aad_prefix = value;
         }
      }


      public Isset __isset;
      public struct Isset
      {
         public bool aad_prefix;
         public bool aad_file_unique;
         public bool supply_aad_prefix;
      }

      public AesGcmCtrV1()
      {
      }

      public async global::System.Threading.Tasks.Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken)
      {
         iprot.IncrementRecursionDepth();
         try
         {
            TField field;
            await iprot.ReadStructBeginAsync(cancellationToken);
            while (true)
            {
               field = await iprot.ReadFieldBeginAsync(cancellationToken);
               if (field.Type == TType.Stop)
               {
                  break;
               }

               switch (field.ID)
               {
                  case 1:
                     if (field.Type == TType.String)
                     {
                        Aad_prefix = await iprot.ReadBinaryAsync(cancellationToken);
                     }
                     else
                     {
                        await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
                     }
                     break;
                  case 2:
                     if (field.Type == TType.String)
                     {
                        Aad_file_unique = await iprot.ReadBinaryAsync(cancellationToken);
                     }
                     else
                     {
                        await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
                     }
                     break;
                  case 3:
                     if (field.Type == TType.Bool)
                     {
                        Supply_aad_prefix = await iprot.ReadBoolAsync(cancellationToken);
                     }
                     else
                     {
                        await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
                     }
                     break;
                  default:
                     await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
                     break;
               }

               await iprot.ReadFieldEndAsync(cancellationToken);
            }

            await iprot.ReadStructEndAsync(cancellationToken);
         }
         finally
         {
            iprot.DecrementRecursionDepth();
         }
      }

      public async global::System.Threading.Tasks.Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken)
      {
         oprot.IncrementRecursionDepth();
         try
         {
            var tmp218 = new TStruct("AesGcmCtrV1");
            await oprot.WriteStructBeginAsync(tmp218, cancellationToken);
            var tmp219 = new TField();
            if ((Aad_prefix != null) && __isset.aad_prefix)
            {
               tmp219.Name = "aad_prefix";
               tmp219.Type = TType.String;
               tmp219.ID = 1;
               await oprot.WriteFieldBeginAsync(tmp219, cancellationToken);
               await oprot.WriteBinaryAsync(Aad_prefix, cancellationToken);
               await oprot.WriteFieldEndAsync(cancellationToken);
            }
            if ((Aad_file_unique != null) && __isset.aad_file_unique)
            {
               tmp219.Name = "aad_file_unique";
               tmp219.Type = TType.String;
               tmp219.ID = 2;
               await oprot.WriteFieldBeginAsync(tmp219, cancellationToken);
               await oprot.WriteBinaryAsync(Aad_file_unique, cancellationToken);
               await oprot.WriteFieldEndAsync(cancellationToken);
            }
            if (__isset.supply_aad_prefix)
            {
               tmp219.Name = "supply_aad_prefix";
               tmp219.Type = TType.Bool;
               tmp219.ID = 3;
               await oprot.WriteFieldBeginAsync(tmp219, cancellationToken);
               await oprot.WriteBoolAsync(Supply_aad_prefix, cancellationToken);
               await oprot.WriteFieldEndAsync(cancellationToken);
            }
            await oprot.WriteFieldStopAsync(cancellationToken);
            await oprot.WriteStructEndAsync(cancellationToken);
         }
         finally
         {
            oprot.DecrementRecursionDepth();
         }
      }

      public override bool Equals(object that)
      {
         if (!(that is AesGcmCtrV1 other)) return false;
         if (ReferenceEquals(this, other)) return true;
         return ((__isset.aad_prefix == other.__isset.aad_prefix) && ((!__isset.aad_prefix) || (TCollections.Equals(Aad_prefix, other.Aad_prefix))))
           && ((__isset.aad_file_unique == other.__isset.aad_file_unique) && ((!__isset.aad_file_unique) || (TCollections.Equals(Aad_file_unique, other.Aad_file_unique))))
           && ((__isset.supply_aad_prefix == other.__isset.supply_aad_prefix) && ((!__isset.supply_aad_prefix) || (System.Object.Equals(Supply_aad_prefix, other.Supply_aad_prefix))));
      }

      public override int GetHashCode()
      {
         int hashcode = 157;
         unchecked
         {
            if ((Aad_prefix != null) && __isset.aad_prefix)
            {
               hashcode = (hashcode * 397) + Aad_prefix.GetHashCode();
            }
            if ((Aad_file_unique != null) && __isset.aad_file_unique)
            {
               hashcode = (hashcode * 397) + Aad_file_unique.GetHashCode();
            }
            if (__isset.supply_aad_prefix)
            {
               hashcode = (hashcode * 397) + Supply_aad_prefix.GetHashCode();
            }
         }
         return hashcode;
      }

      public override string ToString()
      {
         var tmp220 = new StringBuilder("AesGcmCtrV1(");
         int tmp221 = 0;
         if ((Aad_prefix != null) && __isset.aad_prefix)
         {
            if (0 < tmp221++) { tmp220.Append(", "); }
            tmp220.Append("Aad_prefix: ");
            Aad_prefix.ToString(tmp220);
         }
         if ((Aad_file_unique != null) && __isset.aad_file_unique)
         {
            if (0 < tmp221++) { tmp220.Append(", "); }
            tmp220.Append("Aad_file_unique: ");
            Aad_file_unique.ToString(tmp220);
         }
         if (__isset.supply_aad_prefix)
         {
            if (0 < tmp221++) { tmp220.Append(", "); }
            tmp220.Append("Supply_aad_prefix: ");
            Supply_aad_prefix.ToString(tmp220);
         }
         tmp220.Append(')');
         return tmp220.ToString();
      }
   }

}